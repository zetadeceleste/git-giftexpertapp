{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMA2BeA,EAxBK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACJC,mBAAS,IADL,mBACjCC,EADiC,KACrBC,EADqB,KAgBxC,OACG,uBAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKjB,UACG,6BAAKD,IACL,uBAAOQ,KAAK,OAAOC,MAAOT,EAAYU,SAhBlB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,c,+BCPhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEdC,EAFc,iDAEkCC,UACnDH,GAHiB,+DAKDI,MAAMF,GALL,cAKdG,EALc,gBAMGA,EAAKC,OANR,uBAMZC,EANY,EAMZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC5B,MAAO,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZpB,kBAgBbM,GAhBa,4CAAH,sDCWLO,EATK,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAC3B,OACG,sBAAKc,UAAU,yCAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCcEO,EAhBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACbd,mBAAS,CAChCqB,KAAM,GACNa,SAAS,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAevC,OATAC,qBAAU,WACPxB,EAAQC,GAAUwB,MAAK,SAACC,GACrBH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAGf,CAACpB,IAEGqB,EDb2BK,CAAa1B,GAAjCa,EADiB,EACvBN,KAAca,EADS,EACTA,QAEtB,OACG,qCACG,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SACIH,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEQtBgB,EAjBM,WAAO,IAAD,EACYzC,mBAAS,CAAC,cADtB,mBACjB0C,EADiB,KACL3C,EADK,KAGxB,OACG,qCACG,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BACI2C,EAAWnB,KAAI,SAACT,GAAD,OACb,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCR7B6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.8c94a326.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n   const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange = (e) => {\r\n      setInputValue(e.target.value);\r\n   };\r\n\r\n   const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n         setCategories((cats) => [inputValue, ...cats]);\r\n         setInputValue('');\r\n      }\r\n   };\r\n\r\n   return (\r\n      <form onSubmit={handleSubmit}>\r\n         <h1>{inputValue}</h1>\r\n         <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n      </form>\r\n   );\r\n};\r\n\r\nexport default AddCategory;\r\n\r\nAddCategory.propTypes = {\r\n   setCategories: PropTypes.func.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n\r\n   const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n      category,\r\n   )}&limit=10&api_key=H8xCMzQwtNlOjMD55JRlRScwW4Hpn12T`;\r\n   const resp = await fetch(url);\r\n   const { data } = await resp.json();\r\n\r\n   const gifs = data.map((img) => {\r\n      return {\r\n         id: img.id,\r\n         title: img.title,\r\n         url: img.images?.downsized_medium.url,\r\n      };\r\n   });\r\n\r\n   return gifs;\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ title, url }) => {\r\n   return (\r\n      <div className=\"card animate__animated animate__fadeIn\">\r\n         <img src={url} alt={title} />\r\n         <p>{title}</p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n   const { data: images, loading } = useFetchGifs(category);\r\n\r\n   return (\r\n      <>\r\n         <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n         {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n         <div className=\"card-grid\">\r\n            {images.map((img) => (\r\n               <GifGridItem key={img.id} {...img} />\r\n            ))}\r\n         </div>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n   const [state, setstate] = useState({\r\n      data: [],\r\n      loading: true,\r\n   });\r\n\r\n   useEffect(() => {\r\n      getGifs(category).then((imgs) => {\r\n         setstate({\r\n            data: imgs,\r\n            loading: false,\r\n         });\r\n      });\r\n   }, [category]);\r\n\r\n   return state; // { data: [], loading: true }\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n   const [categories, setCategories] = useState(['One Punch']);\r\n\r\n   return (\r\n      <>\r\n         <h2>GifExpertApp</h2>\r\n         <AddCategory setCategories={setCategories} />\r\n         <hr />\r\n         <ol>\r\n            {categories.map((category) => (\r\n               <GifGrid key={category} category={category} />\r\n            ))}\r\n         </ol>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));"],"sourceRoot":""}